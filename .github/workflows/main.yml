name: Invision Archive Tools - Build & Package

on:
  workflow_dispatch:

jobs:
  # Phase A - Build
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: gradle-${{ runner.os }}-

    - name: Build fatJar
      working-directory: app
      run: ../gradlew fatJar

    - name: Upload JAR
      uses: actions/upload-artifact@v4
      with:
        name: iat-fatjar
        path: app/build/libs/app.jar

  # Phase B - Export Additional Artifacts
  export:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download fatJar
      uses: actions/download-artifact@v4
      with:
        name: iat-fatjar
        path: app/build/libs

  # Phase C - Linux DEB Installer
  linux-installer:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Download JBR
      run: |
        curl -L -o jbr.tar.gz https://cache-redirector.jetbrains.com/intellij-jbr/jbr_jcef-21.0.8-linux-x64-b1038.68.tar.gz
        mkdir jbr && tar -xf jbr.tar.gz -C jbr --strip-components=1

    - name: Download fatJar
      uses: actions/download-artifact@v4
      with:
        name: iat-fatjar
        path: app/build/libs

    - name: Create DEB installer
      run: |
        VERSION=$(cat ./VERSION)
        
        jpackage \
          --type deb \
          --input app/build/libs \
          --main-jar app.jar \
          --main-class com.urbanelf.iat.Core \
          --runtime-image jbr \
          --dest output \
          --name "Invision Archive Tools" \
          --icon jpackage/linux/icon.png \
          --app-version "$VERSION" \
          --verbose

    - name: Upload DEB
      uses: actions/upload-artifact@v4
      with:
        name: iat-linux-deb
        path: output/*.deb

  # Phase C - Windows EXE Installer
  windows-installer:
    runs-on: windows-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Download JBR
      run: |
        curl -L -o jbr.zip https://cache-redirector.jetbrains.com/intellij-jbr/jbr_jcef-21.0.8-windows-x64-b1038.68.zip
        mkdir jbr && tar -xf jbr.zip -C jbr --strip-components=1

    - name: Download fatJar
      uses: actions/download-artifact@v4
      with:
        name: iat-fatjar
        path: app\build\libs

    - name: Create EXE installer
      run: |
        $version = Get-Content -Raw -Path .\VERSION
      
        jpackage `
          --type exe `
          --input app\build\libs `
          --main-jar app.jar `
          --main-class com.urbanelf.iat.Core `
          --runtime-image jbr `
          --dest output `
          --name "Invision Archive Tools" `
          --icon jpackage/windows/icon.ico `
          --app-version $version `
          --verbose

    - name: Upload EXE
      uses: actions/upload-artifact@v4
      with:
        name: iat-windows-exe
        path: output\*.exe

  # Phase C - macOS PKG Installer
  macos-installer:
    runs-on: macos-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Download JBR
      run: |
        curl -L -o jbr.tar.gz https://cache-redirector.jetbrains.com/intellij-jbr/jbr_jcef-21.0.8-osx-x64-b1038.68.tar.gz
        mkdir jbr && tar -xf jbr.tar.gz -C jbr --strip-components=1

    - name: Download fatJar
      uses: actions/download-artifact@v4
      with:
        name: iat-fatjar
        path: app/build/libs

    - name: Create PKG installer
      run: |
        VERSION=$(cat ./VERSION)
        
        jpackage \
          --type pkg \
          --input app/build/libs \
          --main-jar app.jar \
          --main-class com.urbanelf.iat.Core \
          --runtime-image jbr \
          --dest output \
          --name "Invision Archive Tools" \
          --icon jpackage/macos/icon.icns \
          --app-version "$VERSION" \
          --verbose

    - name: Upload PKG
      uses: actions/upload-artifact@v4
      with:
        name: iat-macos-pkg
        path: output/*.pkg
        
  # Phase D - Uplaod artifacts
  upload-artifacts:
    name: Upload Installers to GitHub Release
    needs: [linux-installer, windows-installer, macos-installer]
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Needed to upload release assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version
        id: version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Upload Linux .deb
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          files: |
            dist/iat-linux-deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS .pkg
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          files: |
            dist/iat-macos-pkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows .exe
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          files: |
            dist/iat-windows-exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

